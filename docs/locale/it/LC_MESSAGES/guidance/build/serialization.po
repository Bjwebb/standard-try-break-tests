# SOME DESCRIPTIVE TITLE.
# Copyright (C) Open Contracting Partnership
# This file is distributed under the same license as the Open Contracting Data Standard package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Alessio Dragoni <ad@sciamlab.com>, 2020
# James McKinney, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Open Contracting Data Standard 1.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-28 00:33-0400\n"
"PO-Revision-Date: 2020-06-29 22:59+0000\n"
"Last-Translator: James McKinney, 2021\n"
"Language-Team: Italian (https://www.transifex.com/open-contracting-partnership-1/teams/112300/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../docs/guidance/build/serialization.md:1
msgid "Serialization"
msgstr "Serializzazione"

#: ../../docs/guidance/build/serialization.md:3
msgid ""
"The Open Contracting Data Standard provides a **structured data model** for "
"capturing in-depth information about all stages of the contracting process."
msgstr ""
"L'Open Contracting Data Standard fornisce un **modello di dati strutturati**"
" per l'acquisizione di informazioni approfondite su tutte le fasi di un "
"processo di acquisto o di appalto."

#: ../../docs/guidance/build/serialization.md:5
msgid ""
"The current canonical version of this data model is provided by a **[JSON "
"Schema](../../schema/release)** which describes field names, field "
"definitions and structures for the data. The compliance of data with the "
"Open Contracting Data Standard will be assessed against this schema."
msgstr ""

#: ../../docs/guidance/build/serialization.md:7
msgid ""
"However, there are many use cases where publishers and users will want to "
"work with data serialized in other formats. For this reason, the current "
"version of OCDS supports a number of **secondary serializations** which are "
"based on the canonical schema. These are not currently official components "
"of the standard, but are designed to support publishers in providing "
"accessible data to a range of different users."
msgstr ""

#: ../../docs/guidance/build/serialization.md:9
msgid "JSON"
msgstr "JSON"

#: ../../docs/guidance/build/serialization.md:11
msgid ""
"JSON stands for JavaScript Object Notation, and is a format widely used for "
"the exchange of data on the web. The JSON schema language provides "
"validation tools for working with JSON data."
msgstr ""
"JSON è l'acronimo di JavaScript Object Notation ed è un formato ampiamente "
"utilizzato per lo scambio di dati sul Web. Il linguaggio dello schema JSON "
"fornisce strumenti di convalida per lavorare con i dati JSON."

#: ../../docs/guidance/build/serialization.md:13
msgid ""
"OCDS data needs to follow the I-JSON (Internet JSON) specification in "
"[RFC7493](https://tools.ietf.org/html/rfc7493), according to which JSON text"
" needs to be encoded using [UTF-8](https://en.wikipedia.org/wiki/UTF-8), and"
" which introduces a number of requirements for numbers, objects and dates."
msgstr ""

#: ../../docs/guidance/build/serialization.md:15
msgid "Generating JSON"
msgstr "Generazione del JSON"

#: ../../docs/guidance/build/serialization.md:17
msgid "Most programming languages provide tools for output data as JSON."
msgstr ""
"La maggior parte dei linguaggi di programmazione fornisce strumenti per "
"fornire dati in output in formati come il JSON."

#: ../../docs/guidance/build/serialization.md:19
msgid ""
"[A range of tools](http://json-schema.org/implementations.html) are "
"available for working with [JSON-Schema](http://json-schema.org/), including"
" validation and form generation tools."
msgstr ""
"[Una gamma di strumenti](http://json-schema.org/implementations.html) sono "
"disponibili per lavorare con [JSON-Schema](http://json-schema.org/), inclusi"
" strumenti di validazione e generazione di form per l'immissione di dati."

#: ../../docs/guidance/build/serialization.md:21
msgid "Consuming JSON"
msgstr "Processamento del JSON"

#: ../../docs/guidance/build/serialization.md:23
msgid "Most programming languages provide tools for reading JSON."
msgstr ""
"La maggior parte dei linguaggi di programmazione fornisce strumenti per "
"leggere il formato JSON."

#: ../../docs/guidance/build/serialization.md:25
msgid ""
"A number of [JSON native databases](https://en.wikipedia.org/wiki/NoSQL) are"
" available for working directly with large collections of JSON documents, "
"and command line tools such as [jq](https://stedolan.github.io/jq/) support "
"advanced query and data retrieval with JSON files."
msgstr ""

#: ../../docs/guidance/build/serialization.md:27
msgid ""
"There are also a range of generic tools which can convert JSON into flat CSV"
" structures, including:"
msgstr ""
"Ci sono anche una serie di strumenti generici che possono convertire JSON in"
" strutture CSV piatte, tra i quali:"

#: ../../docs/guidance/build/serialization.md:29
msgid ""
"[JSON -> CSV](https://konklone.io/json/) - online tool for converting small "
"documents."
msgstr ""

#: ../../docs/guidance/build/serialization.md:30
msgid ""
"[Open Refine](https://openrefine.org/) - desktop tool that can handle large "
"documents, and supports advanced data manipulation."
msgstr ""

#: ../../docs/guidance/build/serialization.md:32
msgid "CSV"
msgstr "CSV"

#: ../../docs/guidance/build/serialization.md:34
msgid ""
"JSON is based on a tree structure, with data elements nested inside one "
"another. However, many people are more familiar working with tabular data, "
"made up of columns and rows. There is no easy way to represent structured "
"data in a single table. However, we propose two models for publishers to "
"adopt."
msgstr ""
"JSON è basato su una struttura ad albero, con elementi e strutture di dati "
"annidati l'uno dentro l'altro. Tuttavia, molte persone hanno familiarità con"
" i dati tabulari, composti da righe e colonne. Non esiste un modo semplice "
"per rappresentare i dati strutturati in una singola tabella. Tuttavia, per "
"gli editori che desiderano effettuare questo genere di conversione, "
"proponiamo due modelli da adottare."

#: ../../docs/guidance/build/serialization.md:36
msgid ""
"**Simplified single table** - for cases where there are no one-to-many "
"relationships in the data (e.g. each tender has only one award and contract,"
" and each has only one line-item)."
msgstr ""
"**tabella unica semplificata** - per i casi in cui non ci sono relazioni "
"uno-a-molti nei dati (ad esempio, ogni offerta ha una sola aggiudicazione e "
"un contratto, e ognuno ha un solo articolo-riga)."

#: ../../docs/guidance/build/serialization.md:37
msgid ""
"**Multi-table** - where more advanced structures are needed, but where it is"
" desirable to be able to work with data in spreadsheet-style layouts"
msgstr ""

#: ../../docs/guidance/build/serialization.md:39
msgid ""
"In each case, fields are identified in CSV headers by their [JSON "
"Pointer](https://tools.ietf.org/html/rfc6901). For example:"
msgstr ""

#: ../../docs/guidance/build/serialization.md:41
msgid "**JSON**"
msgstr "**JSON**"

#: ../../docs/guidance/build/serialization.md:48
msgid "**CSV**"
msgstr "**CSV**"

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "ocid"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "tag"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "tender/id"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
msgid "tender/items/id"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
msgid "tender/items/description"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "ocds-a2ef3d01-1594121"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "tender"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "ocds-a2ef3d01-1594121/1"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "1"
msgstr ""

#: ../../docs/guidance/build/serialization.md:50
#: ../../docs/guidance/build/serialization.md:68
msgid "Standards development"
msgstr ""

#: ../../docs/guidance/build/serialization.md:56
msgid ""
"[Beta open source tooling](https://flatten-tool.readthedocs.io/en/latest"
"/usage-ocds/) exists for generating flat CSV OCDS templates, and converting "
"in both directions between JSON spreadsheets following these templates. The "
"OCDS Data Review Tool incorporates this tooling and will offer to convert "
"files uploaded to it."
msgstr ""

#: ../../docs/guidance/build/serialization.md:58
msgid "Simplified single table"
msgstr "Singola tabella semplificata"

#: ../../docs/guidance/build/serialization.md:60
msgid ""
"It is possible to represent a full release in a single flat CSV row by using"
" full JSON pointers for each field as the headings."
msgstr ""

#: ../../docs/guidance/build/serialization.md:62
msgid ""
"This approach is generally only appropriate for data without one-to-many "
"relationships (for example, only one item per tender, and one award and "
"contract for each tender process)."
msgstr ""
"Questo approccio è generalmente appropriato solo per i dati senza relazioni "
"uno-a-molti (ad esempio, un solo articolo per offerta e una aggiudicazione e"
" un contratto per ogni procedura di gara)."

#: ../../docs/guidance/build/serialization.md:64
msgid ""
"It is, however, theoretically possible to represent a full release in a "
"single flat CSV row by using full JSON pointers for each field as the "
"headings. For arrays, this involves adding the array index to the path, such"
" as `tender/item/0/id` and `tender/item/1/id` as separate columns to "
"represent each of the items."
msgstr ""

#: ../../docs/guidance/build/serialization.md:66
msgid ""
"For example, to represent a tender release with two items, the CSV file "
"would include:"
msgstr ""
"Ad esempio, per rappresentare un rilascio di gara con due elementi, il file "
"CSV includerebbe:"

#: ../../docs/guidance/build/serialization.md:68
msgid "tender/items/0/id"
msgstr ""

#: ../../docs/guidance/build/serialization.md:68
msgid "tender/items/0/description"
msgstr ""

#: ../../docs/guidance/build/serialization.md:68
msgid "tender/items/1/id"
msgstr ""

#: ../../docs/guidance/build/serialization.md:68
msgid "tender/items/1/description"
msgstr ""

#: ../../docs/guidance/build/serialization.md:68
msgid "2"
msgstr ""

#: ../../docs/guidance/build/serialization.md:68
msgid "Documentation authoring"
msgstr ""

#: ../../docs/guidance/build/serialization.md:74
msgid "The JSON equivalent of this would be:"
msgstr "L'equivalente in JSON di questo sarebbe:"

#: ../../docs/guidance/build/serialization.md:81
msgid ""
"Whilst this allows complex data to be expressed in flat CSV, users will need"
" to rebuild the structure in order to analyze the data."
msgstr ""
"Mentre ciò consente di esprimere dati complessi in un formato CSV "
"appiattito, gli utenti  riutilizzatori dovranno ricostruire la struttura per"
" analizzare i dati."

#: ../../docs/guidance/build/serialization.md:83
msgid ""
"Instead, data with a one-to-many relationship can be represented using a "
"multi-table serialization."
msgstr ""
"Invece, i dati con una relazione uno-a-molti possono essere rappresentati "
"utilizzando una serializzazione a più tabelle."

#: ../../docs/guidance/build/serialization.md:85
msgid "CSV encoding"
msgstr ""

#: ../../docs/guidance/build/serialization.md:85
msgid "OCDS CSV files ought to be encoded in either UTF-8 or Windows-1252."
msgstr ""

#: ../../docs/guidance/build/serialization.md:91
msgid "Multi-table"
msgstr "multi-tabella"

#: ../../docs/guidance/build/serialization.md:93
msgid ""
"The multi-table serialization separates  objects with many to one "
"relationships (i.e. arrays) into their own tables."
msgstr ""
"La serializzazione a più tabelle separa gli oggetti con relazioni multiple "
"(cioè gli array) nelle proprie tabelle."

#: ../../docs/guidance/build/serialization.md:95
msgid ""
"Multiple tables can be packaged together as the tabs of an Excel "
"spreadsheet, or in a collection of CSV files."
msgstr ""
"Più tabelle possono essere raggruppate insieme come schede di un foglio di "
"calcolo di Excel o in una raccolta di file CSV."

#: ../../docs/guidance/build/serialization.md:97
msgid ""
"An example multi-table template can be found [in the sample data "
"repository](https://github.com/open-contracting/sample-data/tree/main/flat-"
"template)."
msgstr ""

#: ../../docs/guidance/build/serialization.md:99
msgid ""
"For further information on multi-table serializations please see the "
"[flatten tool documentation](https://flatten-"
"tool.readthedocs.io/en/latest/)."
msgstr ""

#: ../../docs/guidance/build/serialization.md:101
msgid "Packaging files with metadata"
msgstr "Creazione di file con metadati"

#: ../../docs/guidance/build/serialization.md:103
msgid ""
"Whatever serialization is used for Open Contracting Data, a single file can "
"contain one or more release and records."
msgstr ""

#: ../../docs/guidance/build/serialization.md:105
msgid ""
"The release package and record package schemas describe the key metadata "
"that ought to be supplied for any file providing Open Contracting Data. This"
" includes the `publishedDate`, `publisher`, `uri` for accessing the file, "
"and the licensing details for the file."
msgstr ""
